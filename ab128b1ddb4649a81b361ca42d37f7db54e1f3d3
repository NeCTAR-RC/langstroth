{
  "comments": [
    {
      "key": {
        "uuid": "3afa9182_e94a52ab",
        "filename": "user_statistics/views.py",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-14T21:51:55Z",
      "side": 1,
      "message": "this will need to be rewritten to support the user registrations metric in graphite.  I have copied a version of it from the production server so that there will be reasonably up to date data.\n\nI would look at the langstroth.views.total_instance_count for an example of how to do this.  The metric is called users.total you should be able to access and use it from the graphite interface.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 31,
        "endChar": 56
      },
      "revId": "ab128b1ddb4649a81b361ca42d37f7db54e1f3d3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_0c624cd8",
        "filename": "user_statistics/views.py",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-15T00:44:06Z",
      "side": 1,
      "message": "That\u0027s fine, will start on this now.\n\nIs there an existing python graphite client that would make the URL handling a bit tidier. Already buried in the Graphite web interface code perhaps?\n\nIf not I would like to create my own.\n\nI\u0027ll be aiming to make the new code have the same interface as the existing UserRegistration class.",
      "parentUuid": "3afa9182_e94a52ab",
      "revId": "ab128b1ddb4649a81b361ca42d37f7db54e1f3d3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_a9d7aabe",
        "filename": "user_statistics/views.py",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-14T21:51:55Z",
      "side": 1,
      "message": "this unfortunately will also need to be converted over to use Graphite.  It seems quite straight forward to get the same data from Graphite.\n\n derivative(summarize(users.total,\"7d\", \"max\"))",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 51,
        "endChar": 56
      },
      "revId": "ab128b1ddb4649a81b361ca42d37f7db54e1f3d3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_ec5ee011",
        "filename": "user_statistics/views.py",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-15T00:44:06Z",
      "side": 1,
      "message": "Yep!\n\nShould this new code be part of this review?\n\nMy feeling is get this code reviewed and committed and then make the Graphite-related changes as part of a new review as its essentially a new feature.\n\nThis would be consistent with your desire to have small reviews.",
      "parentUuid": "3afa9182_a9d7aabe",
      "revId": "ab128b1ddb4649a81b361ca42d37f7db54e1f3d3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    }
  ]
}