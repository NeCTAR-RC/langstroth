{
  "comments": [
    {
      "key": {
        "uuid": "3afa9182_a27cdf73",
        "filename": "langstroth/static/js/crossfilter.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-27T00:48:07Z",
      "side": 1,
      "message": "This looks cool.\nI was thinking of using the inbuilt d3 nest function as describe here:\n\u003chttp://stackoverflow.com/questions/19408296/how-can-i-sum-binned-time-series-using-d3-js\u003e",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_42eedb23",
        "filename": "langstroth/static/js/crossfilter.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-27T01:08:29Z",
      "side": 1,
      "message": "interesting, i was looking at the rollup function, but i couldn\u0027t find any examples that explained how to build a hash.  That example match much more closely to what we need.\n\nif you would like to implement this functionality using D3 directly i\u0027m happy to review.  I am actually busy finishing off the replacement server configuration.",
      "parentUuid": "3afa9182_a27cdf73",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_8281e34c",
        "filename": "langstroth/static/js/user_statistics_nv.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-27T00:48:07Z",
      "side": 1,
      "message": "The only issue I can see is that when histogram is rendered the first and last bars are clipped by the graph margins, so they are half the width of the others.",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_62e9571a",
        "filename": "langstroth/static/js/user_statistics_nv.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-27T01:08:29Z",
      "side": 1,
      "message": "I tried to fix that, but it seems really hard.  If you have any suggestion on how to prevent the clipping with out incurring a bar overlapping the axis that would be helpful.",
      "parentUuid": "3afa9182_8281e34c",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_6205d7c1",
        "filename": "langstroth/static/js/user_statistics_nv.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-27T02:34:00Z",
      "side": 1,
      "message": "I solved similar issues originally in my own code, but I would have to reinvestigate to see if the solution is applicable to the new situation. Wont do that now, maybe later.",
      "parentUuid": "3afa9182_62e9571a",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_2220eff6",
        "filename": "langstroth/static/js/user_statistics_nv.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-28T00:25:48Z",
      "side": 1,
      "message": "generating the ticks manually seems to work ok.  But i think we can do better.  I think that the scale is misconfigured. i had a play with \n\n x \u003d d3.time.scale();\n histoChart.xScale(x);\n\n x.domain(d3.extent(cumulativeTrend.values,\n                    function(d) { return d[1]; }));\n\n\ni think this is closer to what we should actually be using.  but we probably need to set an offset to match the size of the axis or possibly just adjust the extent to include one month previous and in the future.",
      "parentUuid": "3afa9182_6205d7c1",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_42653b44",
        "filename": "langstroth/static/js/user_statistics_nv.js",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-28T01:05:08Z",
      "side": 1,
      "message": "My instincts would be to go with the domain adjustment.",
      "parentUuid": "3afa9182_2220eff6",
      "revId": "e176fcc5fd2a68157a80177fde689aaf92d3cfa7",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    }
  ]
}