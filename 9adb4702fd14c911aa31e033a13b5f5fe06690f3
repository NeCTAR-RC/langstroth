{
  "comments": [
    {
      "key": {
        "uuid": "3afa9182_27c4813f",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-23T09:07:28Z",
      "side": 1,
      "message": "every method in this class is a static method so why not use functions instead of a class?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 29
      },
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_c7f49d89",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-24T00:02:03Z",
      "side": 1,
      "message": "There are 2 things the class is trying to express:\n1. A concept with a name. This helps in documenting the intended function of the class and any calls to its methods. Otherwise we need more  comments and that is considered to be a bad thing.\n2. Encapsulation. The class expresses the intent of a having a \"black box\" with only some of its functions being for public consumption.\n\nI am not sure that the python notion of  module tied to a filename is up to this.",
      "parentUuid": "3afa9182_27c4813f",
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_a70cf195",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-24T01:12:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3afa9182_c7f49d89",
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_c7c65d49",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-23T09:07:28Z",
      "side": 1,
      "message": "this is over complicated, why are you treating each of these elements differently?\n\nthis could have been done like\n\n for key, datapoints in response_data:\n     response_data[key] \u003d [point for in datapoints\n                           if point[cls.VALUE_INDEX] is not None]",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 66,
        "endChar": 28
      },
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_27dbe11c",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2014-10-23T23:02:11Z",
      "side": 1,
      "message": "there is actually a bug in my original comment, the first line should read \n\n for key, datapoints in response_data.items():",
      "parentUuid": "3afa9182_c7c65d49",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 66,
        "endChar": 28
      },
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_27f2c19a",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-24T00:02:03Z",
      "side": 1,
      "message": "There is an implicit notion here of complexity as defined by lines of code. But this disregards that complexity arises from the number of control structures.\n\nThe number of lines here arises from attaching variable names to the components of the data and this explains the data structure. Without this an follow on developer is going to need to lookup the Graphite data format and squint their brain a bit to unpack the meaning in the for loop and the array comprehension. \n\nI would need to add a comment to this block just to explicated what it is doing\n\nI know cramming a bunch of stuff into too few lines is satisfying, but it is great camouflage for bugs.",
      "parentUuid": "3afa9182_c7c65d49",
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3afa9182_8711f5ae",
        "filename": "user_statistics/services/user_statistics.py",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2014-10-24T01:12:34Z",
      "side": 1,
      "message": "As far as I can tell items()  is for a dictionary and not a list.\nCame up with a general version of my own code.\n\nDone",
      "parentUuid": "3afa9182_27dbe11c",
      "revId": "9adb4702fd14c911aa31e033a13b5f5fe06690f3",
      "serverId": "f182a8af-62ca-4ceb-ab81-14f8fec9c6c5",
      "unresolved": false
    }
  ]
}